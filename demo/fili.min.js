/*! fili 0.0.11 15-01-2015 */
/*! Author: Florian Markert */
/*! License: MIT */
"use strict";
var evaluatePhase = function (a) {
    var b = 0,
      c = 0,
      d = Math.PI,
      e = 2 * d,
      f = [];
    for (c = 0; c < a.length; c++) f.push(a[c].phase);
    for (a[0].unwrappedPhase = a[0].phase, a[0].groupDelay = 0, c = 1; c < f.length; c++) {
      var g = f[c] - f[c - 1];
      if (g > d)
        for (b = c; b < f.length; b++) f[b] -= e;
      else if (-d > g)
        for (b = c; b < f.length; b++) f[b] += e;
      a[c].unwrappedPhase = f[c] < 0 ? -f[c] : f[c], a[c].phaseDelay = a[c].unwrappedPhase / (c / a.length), a[c].groupDelay = (a[c].unwrappedPhase - a[c - 1].unwrappedPhase) / (d / a.length)
    }
    a[0].phaseDelay = a[1].phaseDelay, a[0].groupDelay = a[1].groupDelay
  },
  runMultiFilter = function (a, b, c, d) {
    var e = [];
    d && (e = a);
    var f;
    for (f = 0; f < a.length; f++) e[f] = c(a[f], b);
    return e
  },
  factorial = function (a, b) {
    return b || (b = 1), a !== Math.floor(a) || b !== Math.floor(b) ? 1 : 0 === a || 1 === a ? b : factorial(a - 1, b * a)
  },
  besselFactors = function (a) {
    for (var b = [], c = 0; a + 1 > c; c++) {
      var d = factorial(2 * a - c),
        e = Math.pow(2, a - c) * factorial(c) * factorial(a - c);
      b.unshift(Math.floor(d / e))
    }
    return b
  },
  complex = {
    div: function (a, b) {
      var c = a.re,
        d = a.im,
        e = b.re,
        f = b.im,
        g = e * e + f * f,
        h = {
          re: (c * e + d * f) / g,
          im: (d * e - c * f) / g
        };
      return h
    },
    mul: function (a, b) {
      var c = a.re,
        d = a.im,
        e = b.re,
        f = b.im,
        g = {
          re: c * e - d * f,
          im: (c + d) * (e + f) - c * e - d * f
        };
      return g
    },
    add: function (a, b) {
      var c = {
        re: a.re + b.re,
        im: a.im + b.im
      };
      return c
    },
    sub: function (a, b) {
      var c = {
        re: a.re - b.re,
        im: a.im - b.im
      };
      return c
    },
    phase: function (a) {
      return Math.atan2(a.im, a.re)
    },
    magnitude: function (a) {
      return Math.sqrt(a.re * a.re + a.im * a.im)
    }
  };
! function (a) {
  var b = function (a) {
    var b = function (a) {
      return a & a - 1 ? !1 : !0
    };
    if (!b(a)) return !1;
    var c = {};
    c.length = a, c.buffer = new Float64Array(a), c.re = new Float64Array(a), c.im = new Float64Array(a), c.reI = new Float64Array(a), c.imI = new Float64Array(a), c.twiddle = new Int32Array(a), c.sinTable = new Float64Array(a - 1), c.cosTable = new Float64Array(a - 1);
    var d = 2 * Math.PI,
      e = Math.floor(Math.log(a) / Math.LN2);
    for (g = c.sinTable.length; g--;) c.sinTable[g] = Math.sin(d * (g / a)), c.cosTable[g] = Math.cos(d * (g / a));
    for (var f = a >> 1, g = 0, h = 0; c.twiddle[g] = h, !(++g >= a);) {
      for (e = f; h >= e;) h -= e, e >>= 1;
      h += e
    }
    var i = function (a) {
        var b = Math.PI,
          c = 2 * Math.PI,
          d = Math.abs,
          e = Math.pow,
          f = Math.cos,
          g = Math.sin,
          h = function (a) {
            return g(b * a) / (b * a)
          },
          i = Math.E,
          j = {
            rectangular: {
              calc: function () {
                return 1
              },
              values: [],
              correction: 1
            },
            none: {
              calc: function () {
                return 1
              },
              values: [],
              correction: 1
            },
            hanning: {
              calc: function (a, b) {
                return .5 * (1 - f(c * a / (b - 1)))
              },
              values: [],
              correction: 2
            },
            hamming: {
              calc: function (a, b) {
                return .54 - .46 * f(c * a / (b - 1))
              },
              values: [],
              correction: 1.8518999946875638
            },
            tukery: {
              calc: function (a, c, d) {
                return d * (c - 1) / 2 > a ? .5 * (1 + f(b * (2 * a / (d * (c - 1)) - 1))) : a > (c - 1) * (1 - d / 2) ? .5 * (1 + f(b * (2 * a / (d * (c - 1)) - 2 / d + 1))) : 1
              },
              values: [],
              correction: 4 / 3
            },
            cosine: {
              calc: function (a, c) {
                return g(b * a / (c - 1))
              },
              values: [],
              correction: 1.570844266360796
            },
            lanczos: {
              calc: function (a, b) {
                return h(2 * a / (b - 1) - 1)
              },
              values: [],
              correction: 1.6964337576195783
            },
            triangular: {
              calc: function (a, b) {
                return 2 / (b + 1) * ((b + 1) / 2 - d(a - (b - 1) / 2))
              },
              values: [],
              correction: 2
            },
            bartlett: {
              calc: function (a, b) {
                return 2 / (b - 1) * ((b - 1) / 2 - d(a - (b - 1) / 2))
              },
              values: [],
              correction: 2
            },
            gaussian: {
              calc: function (a, b, c) {
                return e(i, -.5 * e((a - (b - 1) / 2) / (c * (b - 1) / 2), 2))
              },
              values: [],
              correction: 5 / 3
            },
            bartlettHanning: {
              calc: function (a, b) {
                return .62 - .48 * d(a / (b - 1) - .5) - .38 * f(c * a / (b - 1))
              },
              values: [],
              correction: 2
            },
            blackman: {
              calc: function (a, d, e) {
                var g = (1 - e) / 2,
                  h = .5,
                  i = e / 2;
                return g - h * f(c * a / (d - 1)) + i * f(4 * b * a / (d - 1))
              },
              values: [],
              correction: 4 / 3
            }
          };
        return j[a.name].values.length !== a.N ? (0 === a.n && (j[a.name].values.length = 0), j[a.name].values[a.n] = j[a.name].correction * j[a.name].calc(a.n, a.N, a.a), j[a.name].values[a.n]) : j[a.name].values
      },
      j = {
        forward: function (a, b) {
          var d, e, f, g, h, j, k, l, m, n, o, p;
          f = c.buffer.length;
          var q = {
              name: b,
              N: f,
              a: .5,
              n: 0
            },
            r = i(q);
          if ("number" == typeof r)
            for (d = 0; f > d; ++d) q.n = d, c.buffer[d] = a[d] * i(q);
          else
            for (d = 0; f > d; ++d) c.buffer[d] = a[d] * r[d];
          for (d = f; d--;) c.re[d] = c.buffer[c.twiddle[d]], c.im[d] = 0;
          for (g = 1; f > g; g = h)
            for (j = 0, h = g + g, k = f / h, e = 0; g > e; e++) {
              for (l = c.cosTable[j], m = c.sinTable[j], d = e; f > d; d += h) n = d + g, o = m * c.im[n] + l * c.re[n], p = l * c.im[n] - m * c.re[n], c.re[n] = c.re[d] - o, c.re[d] += o, c.im[n] = c.im[d] - p, c.im[d] += p;
              j += k
            }
          return {
            re: c.re,
            im: c.im
          }
        },
        inverse: function (a, b) {
          var d, e, f, g, h, i, j, k, l, m, n, o;
          for (d = f; d--;) e = c.twiddle[d], c.reI[d] = a[e], c.imI[d] = -b[e];
          for (g = 1; f > g; g = h)
            for (i = 0, h = g + g, j = f / h, e = 0; g > e; e++) {
              for (k = c.cosTable[i], l = c.sinTable[i], d = e; f > d; d += h) m = d + g, n = l * c.imI[m] + k * c.reI[m], o = k * c.imI[m] - l * c.reI[m], c.reI[m] = c.reI[d] - n, c.reI[d] += n, c.imI[m] = c.imI[d] - o, c.imI[d] += o;
              i += j
            }
          for (d = f; d--;) c.buffer[d] = c.reI[d] / f;
          return c.buffer
        },
        magnitude: function (a) {
          for (var b = [], c = 0; c < a.re.length; c++) b.push(Math.sqrt(a.re[c] * a.re[c] + a.im[c] * a.im[c]));
          return b
        },
        magToDb: function (a) {
          for (var b = [], c = 0; c < a.length; c++) b.push(20 * Math.log(a[c]) * Math.LOG10E);
          return b
        },
        phase: function (a) {
          for (var b = [], c = 0; c < a.re.length; c++) b.push(Math.atan2(a.im[c], a.re[c]));
          return b
        }
      };
    return j
  };
  "object" == typeof module && module && "object" == typeof module.exports ? module.exports = b : (a.Fft = b, "function" == typeof define && define.amd && define(b))
}(window),
function (a) {
  var b = function () {
    var a = function (a, b) {
        var c = a.Q,
          d = a.Fc,
          e = a.Fs,
          f = {},
          g = 2 * Math.PI * d / e;
        return f.alpha = a.BW ? Math.sin(g) * Math.sinh(Math.log(2) / 2 * a.BW * g / Math.sin(g)) : Math.sin(g) / (2 * c), f.cw = Math.cos(g), f.a0 = 1 + f.alpha, b.a0 = f.a0, b.a.push(-2 * f.cw / f.a0), b.a.push((1 - f.alpha) / f.a0), f
      },
      b = function (a) {
        var b = a.Q,
          c = a.Fc,
          d = a.Fs,
          e = {},
          f = 2 * Math.PI * c / d;
        return e.alpha = Math.sin(f) / (2 * b), e.cw = Math.cos(f), e.A = Math.pow(10, a.gain / 40), e
      },
      c = function () {
        var a = {};
        return a.z = [0, 0], a.a = [], a.b = [], a
      },
      d = {
        fromPZ: function (a) {
          var b = c();
          return b.a0 = 1, b.b.push(1), b.b.push(-a.z0.re - a.z1.re), b.b.push(a.z0.re * a.z1.re - a.z0.im * a.z1.im), b.a.push(-a.p0.re - a.p1.re), b.a.push(a.p0.re * a.p1.re - a.p0.im * a.p1.im), b.k = "lowpass" === a.type ? (1 + b.a[0] + b.a[1]) / (1 + b.b[1] + b.b[2]) : (1 - b.a[0] + b.a[1]) / (1 - b.b[1] + b.b[2]), b
        },
        lowpassBT: function (a) {
          var b = c();
          return a.Q = 1, b.wp = Math.tan(2 * Math.PI * a.Fc / (2 * a.Fs)), b.wp2 = b.wp * b.wp, a.BW && delete a.BW, b.k = 1, b.a0 = 3 * b.wp + 3 * b.wp2 + 1, b.b.push(3 * b.wp2 * a.Q / b.a0), b.b.push(2 * b.b[0]), b.b.push(b.b[0]), b.a.push((6 * b.wp2 - 2) / b.a0), b.a.push((3 * b.wp2 - 3 * b.wp + 1) / b.a0), b
        },
        highpassBT: function (a) {
          var b = c();
          return a.Q = 1, b.wp = Math.tan(2 * Math.PI * a.Fc / (2 * a.Fs)), b.wp2 = b.wp * b.wp, a.BW && delete a.BW, b.k = 1, b.a0 = b.wp + b.wp2 + 3, b.b.push(3 * a.Q / b.a0), b.b.push(2 * b.b[0]), b.b.push(b.b[0]), b.a.push((2 * b.wp2 - 6) / b.a0), b.a.push((b.wp2 - b.wp + 3) / b.a0), b
        },
        lowpass: function (b) {
          var d = c();
          b.BW && delete b.BW;
          var e = a(b, d);
          return b.preGain ? (d.k = .5 * (1 - e.cw), d.b.push(1 / e.a0)) : (d.k = 1, d.b.push((1 - e.cw) / (2 * e.a0))), d.b.push(2 * d.b[0]), d.b.push(d.b[0]), d
        },
        highpass: function (b) {
          var d = c();
          b.BW && delete b.BW;
          var e = a(b, d);
          return b.preGain ? (d.k = .5 * (1 + e.cw), d.b.push(1 / e.a0)) : (d.k = 1, d.b.push((1 + e.cw) / (2 * e.a0))), d.b.push(-2 * d.b[0]), d.b.push(d.b[0]), d
        },
        allpass: function (b) {
          var d = c();
          b.BW && delete b.BW;
          var e = a(b, d);
          return d.k = 1, d.b.push((1 - e.alpha) / e.a0), d.b.push(-2 * e.cw / e.a0), d.b.push((1 + e.alpha) / e.a0), d
        },
        bandpassQ: function (b) {
          var d = c(),
            e = a(b, d);
          return d.k = 1, d.b.push(e.alpha * b.Q / e.a0), d.b.push(0), d.b.push(-d.b[0]), d
        },
        bandpass: function (b) {
          var d = c(),
            e = a(b, d);
          return d.k = 1, d.b.push(e.alpha / e.a0), d.b.push(0), d.b.push(-d.b[0]), d
        },
        bandstop: function (b) {
          var d = c(),
            e = a(b, d);
          return d.k = 1, d.b.push(1 / e.a0), d.b.push(-2 * e.cw / e.a0), d.b.push(d.b[0]), d
        },
        peak: function (a) {
          var d = c(),
            e = b(a);
          return d.k = 1, d.a0 = 1 + e.alpha / e.A, d.a.push(-2 * e.cw / d.a0), d.a.push((1 - e.alpha / e.A) / d.a0), d.b.push((1 + e.alpha * e.A) / d.a0), d.b.push(-2 * e.cw / d.a0), d.b.push((1 - e.alpha * e.A) / d.a0), d
        },
        lowshelf: function (a) {
          var d = c();
          a.BW && delete a.BW;
          var e = b(a);
          d.k = 1;
          var f = 2 * Math.sqrt(e.A) * e.alpha;
          return d.a0 = e.A + 1 + (e.A - 1) * e.cw + f, d.a.push(-2 * (e.A - 1 + (e.A + 1) * e.cw) / d.a0), d.a.push((e.A + 1 + (e.A - 1) * e.cw - f) / d.a0), d.b.push(e.A * (e.A + 1 - (e.A - 1) * e.cw + f) / d.a0), d.b.push(2 * e.A * (e.A - 1 - (e.A + 1) * e.cw) / d.a0), d.b.push(e.A * (e.A + 1 - (e.A - 1) * e.cw - f) / d.a0), d
        },
        highshelf: function (a) {
          var d = c();
          a.BW && delete a.BW;
          var e = b(a);
          d.k = 1;
          var f = 2 * Math.sqrt(e.A) * e.alpha;
          return d.a0 = e.A + 1 - (e.A - 1) * e.cw + f, d.a.push(2 * (e.A - 1 - (e.A + 1) * e.cw) / d.a0), d.a.push((e.A + 1 - (e.A - 1) * e.cw - f) / d.a0), d.b.push(e.A * (e.A + 1 + (e.A - 1) * e.cw + f) / d.a0), d.b.push(-2 * e.A * (e.A - 1 + (e.A + 1) * e.cw) / d.a0), d.b.push(e.A * (e.A + 1 + (e.A - 1) * e.cw - f) / d.a0), d
        }
      };
    return d
  };
  "object" == typeof module && module && "object" == typeof module.exports ? module.exports = b : (a.IirCoeffs = b, "function" == typeof define && define.amd && define(b))
}(window),
function (a) {
  var b = function () {
    var a = function (a) {
        var b = a.Fs,
          c = a.Fc,
          d = a.order,
          e = 2 * Math.PI * c / b,
          f = 0,
          g = 0,
          h = [];
        for (f = 0; d >= f; f++) f - d / 2 === 0 ? h[f] = e : (h[f] = Math.sin(e * (f - d / 2)) / (f - d / 2), h[f] *= .54 - .46 * Math.cos(2 * Math.PI * f / d)), g += h[f];
        for (f = 0; d >= f; f++) h[f] /= g;
        return h
      },
      b = function (a) {
        var b;
        for (b = 0; b < a.length; b++) a[b] = -a[b];
        return a[(a.length - 1) / 2]++, a
      },
      c = function (c) {
        for (var d = a({
            order: c.order,
            Fs: c.Fs,
            Fc: c.F2
          }), e = b(a({
            order: c.order,
            Fs: c.Fs,
            Fc: c.F1
          })), f = [], g = 0; g < d.length; g++) f.push(d[g] + e[g]);
        return f
      },
      d = {
        lowpass: function (b) {
          return a(b)
        },
        highpass: function (c) {
          return b(a(c))
        },
        bandstop: function (a) {
          return c(a)
        },
        bandpass: function (a) {
          return b(c(a))
        }
      };
    return d
  };
  "object" == typeof module && module && "object" == typeof module.exports ? module.exports = b : (a.FirCoeffs = b, "function" == typeof define && define.amd && define(b))
}(window),
function (a) {
  var b = new IirCoeffs,
    c = {
      bessel: {
        q: [
          [.57735026919],
          [.805538281842, .521934581669],
          [1.02331395383, .611194546878, .510317824749],
          [1.22566942541, .710852074442, .559609164796, .505991069397],
          [1.41530886916, .809790964842, .620470155556, .537552151325, .503912727276],
          [1.59465693507, .905947107025, .684008068137, .579367238641, .525936202016, .502755558204],
          [1.76552743493, .998998442993, .747625068271, .624777082395, .556680772868, .519027293158, .502045428643],
          [1.9292718407, 1.08906376917, .810410302962, .671382379377, .591144659703, .542678365981, .514570953471, .501578400482],
          [2.08691792612, 1.17637337045, .872034231424, .718163551101, .627261751983, .569890924765, .533371782078, .511523796759, .50125489338],
          [2.23926560629, 1.26117120993, .932397288146, .764647810579, .664052481472, .598921924986, .555480327396, .526848630061, .509345928377, .501021580965],
          [2.38695091667, 1.34368488961, .991497755204, .81060830488, .701011199665, .628878390935, .57943181849, .545207253735, .52208637596, .507736060535, .500847111042],
          [2.53048919562, 1.42411783481, 1.04937620183, .85593899901, .737862159044, .659265671705, .604435823473, .565352679646, .537608804383, .51849505465, .506508536474, .500715908905]
        ],
        f: [
          [1.27201964951],
          [1.60335751622, 1.43017155999],
          [1.9047076123, 1.68916826762, 1.60391912877],
          [2.18872623053, 1.95319575902, 1.8320926012, 1.77846591177],
          [2.45062684305, 2.20375262593, 2.06220731793, 1.98055310881, 1.94270419166],
          [2.69298925084, 2.43912611431, 2.28431825401, 2.18496722634, 2.12472538477, 2.09613322542],
          [2.91905714471, 2.66069088948, 2.49663434571, 2.38497976939, 2.30961462222, 2.26265746534, 2.24005716132],
          [3.13149167404, 2.87016099416, 2.69935018044, 2.57862945683, 2.49225505119, 2.43227707449, 2.39427710712, 2.37582307687],
          [3.33237300564, 3.06908580184, 2.89318259511, 2.76551588399, 2.67073340527, 2.60094950474, 2.55161764546, 2.52001358804, 2.50457164552],
          [3.52333123464, 3.25877569704, 3.07894353744, 2.94580435024, 2.84438325189, 2.76691082498, 2.70881411245, 2.66724655259, 2.64040228249, 2.62723439989],
          [3.70566068548, 3.44032173223, 3.2574059854, 3.11986367838, 3.01307175388, 2.92939234605, 2.86428726094, 2.81483068055, 2.77915465405, 2.75596888377, 2.74456638588],
          [3.88040469682, 3.61463243697, 3.4292654707, 3.28812274966, 3.17689762788, 3.08812364257, 3.01720732972, 2.96140104561, 2.91862858495, 2.88729479473, 2.8674198668, 2.8570800015]
        ]
      }
    },
    d = function (a, d) {
      var e = [],
        f = 0;
      if ("fromPZ" !== d)
        for (a.order > 12 && (a.order = 12), f = 0; f < a.order; f++) {
          var g, h, i;
          "butterworth" === a.characteristic ? (g = .5 / Math.sin(Math.PI / (2 * a.order) * (f + .5)), h = 1) : (g = c[a.characteristic].q[a.order - 1][f], h = c[a.characteristic].f[a.order - 1][f]), i = "highpass" === d ? a.Fc / h : a.Fc * h, e.push(b[d]({
            Fs: a.Fs,
            Fc: i,
            Q: g,
            BW: a.BW || 0,
            gain: a.gain || 0,
            preGain: a.preGain || !1
          }))
        } else
          for (f = 0; f < a.length; f++) e.push(b[d](a[f]));
      return e
    },
    e = function (a) {
      return function (b) {
        return d(b, a)
      }
    },
    f = {},
    g = function () {
      for (var a in b) f[a] = e(a);
      return f
    };
  "object" == typeof module && module && "object" == typeof module.exports ? module.exports = g : (a.CalcCascades = g, "function" == typeof define && define.amd && define(g))
}(window),
function (a) {
  var b = function (a) {
    for (var b = a, c = {
        re: 1,
        im: 0
      }, d = [], e = [], f = 0; f < b.length; f++) {
      d[f] = {};
      var g = b[f];
      d[f].b0 = {
        re: g.b[0],
        im: 0
      }, d[f].b1 = {
        re: g.b[1],
        im: 0
      }, d[f].b2 = {
        re: g.b[2],
        im: 0
      }, d[f].a1 = {
        re: g.a[0],
        im: 0
      }, d[f].a2 = {
        re: g.a[1],
        im: 0
      }, d[f].k = {
        re: g.k,
        im: 0
      }, e[f] = {}, e[f].b1 = g.b[1] / g.b[0], e[f].b2 = g.b[2] / g.b[0], e[f].a1 = g.a[0], e[f].a2 = g.a[1]
    }
    var h = function (a, b) {
        var c = b * a.k - a.a[0] * a.z[0] - a.a[1] * a.z[1],
          d = a.b[0] * c + a.b[1] * a.z[0] + a.b[2] * a.z[1];
        return a.z[1] = a.z[0], a.z[0] = c, d
      },
      i = function (a, b) {
        var c = a,
          d = 0;
        for (d = 0; d < b.length; d++) c = h(b[d], c);
        return c
      },
      j = function (a, b) {
        var d = a.Fs,
          e = a.Fr,
          f = -Math.PI * (e / d) * 2,
          g = {
            re: Math.cos(f),
            im: Math.sin(f)
          },
          h = complex.mul(b.k, complex.add(b.b0, complex.mul(g, complex.add(b.b1, complex.mul(b.b2, g))))),
          i = complex.add(c, complex.mul(g, complex.add(b.a1, complex.mul(b.a2, g)))),
          j = complex.div(h, i),
          k = {
            magnitude: complex.magnitude(j),
            phase: complex.phase(j)
          };
        return k
      },
      k = function (a) {
        var b = 0,
          c = {
            magnitude: 1,
            phase: 0
          };
        for (b = 0; b < d.length; b++) {
          var e = j(a, d[b]);
          c.magnitude *= e.magnitude, c.phase += e.phase
        }
        return c.dBmagnitude = 20 * Math.log(c.magnitude) * Math.LOG10E, c
      },
      l = function () {
        for (var a = [], c = 0; c < b.length; c++) a[c] = {
          a: [b[c].a[0], b[c].a[1]],
          b: [b[c].b[0], b[c].b[1], b[c].b[2]],
          k: b[c].k,
          z: [0, 0]
        };
        return a
      },
      m = function (a) {
        var b = l();
        return runMultiFilter(a, b, i)
      },
      n = function (a, b) {
        var c = {},
          d = [],
          e = 0;
        for (e = 0; b > e; e++) d.push(a(e));
        c.out = m(d);
        var f = !1,
          g = !1;
        for (e = 0; b - 1 > e; e++)
          if (c.out[e] > c.out[e + 1] && !f && (f = !0, c.max = {
              sample: e,
              value: c.out[e]
            }), f && !g && c.out[e] < c.out[e + 1]) {
            g = !0, c.min = {
              sample: e,
              value: c.out[e]
            };
            break
          }
        return c
      },
      o = function (a, b) {
        var c = Math.pow(a / 2, 2) - b;
        return 0 > c ? [{
          re: -a / 2,
          im: Math.sqrt(Math.abs(c))
        }, {
          re: -a / 2,
          im: -Math.sqrt(Math.abs(c))
        }] : [{
          re: -a / 2 + Math.sqrt(c),
          im: 0
        }, {
          re: -a / 2 - Math.sqrt(c),
          im: 0
        }]
      },
      p = function () {
        for (var a = [], b = 0; b < e.length; b++) a[b] = {}, a[b].z = o(e[b].b1, e[b].b2), a[b].p = o(e[b].a1, e[b].a2);
        return a
      },
      q = {
        singleStep: function (a) {
          return i(a, b)
        },
        multiStep: function (a, c) {
          return runMultiFilter(a, b, i, c)
        },
        simulate: function (a) {
          return m(a)
        },
        stepResponse: function (a) {
          return n(function () {
            return 1
          }, a)
        },
        impulseResponse: function (a) {
          return n(function (a) {
            return 0 === a ? 1 : 0
          }, a)
        },
        responsePoint: function (a) {
          return k(a)
        },
        response: function (a) {
          a = a || 100;
          var b = [],
            c = 0,
            d = 2 * a;
          for (c = 0; a > c; c++) b[c] = k({
            Fs: d,
            Fr: c
          });
          return evaluatePhase(b), b
        },
        polesZeros: function () {
          return p()
        },
        reinit: function () {
          for (f = 0; f < b.length; f++) b[f].z = [0, 0]
        }
      };
    return q
  };
  "object" == typeof module && module && "object" == typeof module.exports ? module.exports = b : (a.IirFilter = b, "function" == typeof define && define.amd && define(b))
}(window),
function (a) {
  var b = function (a) {
    var b = a,
      c = [],
      d = 0;
    for (d = 0; d < b.length; d++) c[d] = {
      re: b[d],
      im: 0
    };
    var e = function (a) {
        var b, c = [];
        for (b = 0; a > b; b++) c.push(0);
        return {
          buf: c,
          pointer: 0
        }
      },
      f = e(b.length - 1),
      g = function (a, c) {
        c.buf[c.pointer] = a;
        var e = 0;
        for (d = 0; d < c.buf.length; d++) e += b[d] * c.buf[(c.pointer + d) % c.buf.length];
        return c.pointer = (c.pointer + 1) % c.buf.length, e
      },
      h = function (a) {
        var c = e(b.length - 1);
        return runMultiFilter(a, c, g)
      },
      i = function (a) {
        for (var d = a.Fs, e = a.Fr, f = -Math.PI * (e / d) * 2, g = {
            re: 0,
            im: 0
          }, h = 0; h < b.length - 1; h++) g = complex.add(g, complex.mul(c[h], {
          re: Math.cos(f * h),
          im: Math.sin(f * h)
        }));
        var i = complex.magnitude(g),
          j = {
            magnitude: i,
            phase: complex.phase(g),
            dBmagnitude: 20 * Math.log(i) * Math.LOG10E
          };
        return j
      },
      j = {
        responsePoint: function (a) {
          return i(a)
        },
        response: function (a) {
          a = a || 100;
          var b = [],
            c = 0,
            d = 2 * a;
          for (c = 0; a > c; c++) b[c] = i({
            Fs: d,
            Fr: c
          });
          return evaluatePhase(b), b
        },
        simulate: function (a) {
          return h(a)
        },
        singleStep: function (a) {
          return g(a, f)
        },
        multiStep: function (a, b) {
          return runMultiFilter(a, f, g, b)
        },
        reinit: function () {
          f = e(b.length - 1)
        }
      };
    return j
  };
  "object" == typeof module && module && "object" == typeof module.exports ? module.exports = b : (a.FirFilter = b, "function" == typeof define && define.amd && define(b))
}(window),
function (a) {
  var b = function (a) {
    var b, c = a,
      d = [],
      e = function (a) {
        for (b = 0; b < a.steps; b++) d.push(c.singleStep((Math.random() - .5) * a.pp + a.offset))
      },
      f = function (a) {
        var e = a.offset + a.pp,
          f = a.offset - a.pp;
        for (b = 0; b < a.steps; b++) d.push(100 > b % 200 ? c.singleStep(e) : c.singleStep(f))
      },
      g = function (a) {
        var e = a.offset + a.pp,
          f = a.offset - a.pp;
        for (b = 0; b < a.steps; b++) d.push(b % 100 === 0 ? c.singleStep(e) : c.singleStep(f))
      },
      h = function (a) {
        var e = a.offset + a.pp,
          f = a.offset - a.pp,
          g = f,
          h = (e - f) / 100;
        for (b = 0; b < a.steps; b++) 100 > b % 200 ? g += h : g -= h, d.push(c.singleStep(g))
      },
      i = {
        randomStability: function (a) {
          for (c.reinit(), d.length = 0, e(a), b = a.setup; b < d.length; b++)
            if (d[b] > a.maxStable || d[b] < a.minStable) return d[b];
          return !0
        },
        directedRandomStability: function (a) {
          c.reinit(), d.length = 0;
          var i;
          for (i = 0; i < a.tests; i++) {
            var j = Math.random();.25 > j ? e(a) : .5 > j ? f(a) : .75 > j ? g(a) : h(a)
          }
          for (e(a), b = a.setup; b < d.length; b++)
            if (d[b] > a.maxStable || d[b] < a.minStable) return d[b];
          return !0
        },
        evaluateBehavior: function () {}
      };
    return i
  };
  "object" == typeof module && module && "object" == typeof module.exports ? module.exports = b : (a.TestFilter = b, "function" == typeof define && define.amd && define(b))
}(window);
